name: copy-playlists actions
on:
  push:
    branches: [master, dev]
    tags: [v*]
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Golang 1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Checkout code into directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: go test -v ./...

  build:
    name: Build docker image
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test
    env:
      IMAGE_NAME: copy-playlists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Tags images
          docker tag $IMAGE_NAME $IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

          # Show pushing images
          echo "Pushing Images"
          docker images --format "{{.Repository}}\t{{.Tag}}\t{{.Size}}" $IMAGE_ID

          docker push -a $IMAGE_ID
